@charset "UTF-8";

////
/// @group 99. ユーティリティ
////

/// 指定した色名のカラーコードを取得する
///
/// @since 1.0.0
///
/// @param {string} $key
/// 	色名
///
/// @return {color}
///
/// @example scss
/// 	$colors: ("black": #000, "white": #fff);
/// 	@debug get-color("black"); // #000

@function color($key) {
	@return map-get($colors, $key);
}

/// 絶対単位の値から相対単位の値に変換する
///
/// @since 1.0.0
///
/// @param {number} $abs - 変換対象値 (単位は省略可)
/// @param {number} $basis - 変換基準値 (単位は省略可)
/// @param {boolean} $is-percentage [false] - 百分率の形式で返す場合はtrueを指定する
///
/// @return {number}
///
/// @example scss
/// 	@debug absolute-to-relative(10, 100) * 1em; // .1em
/// 	@debug absolute-to-relative(10, 100, true) * 1%; // 10%

@function absolute-to-relative($abs, $basis, $is-percentage: false) {
	$abs:      strip-unit($abs);
	$basis:    strip-unit($basis);
	$relative: $abs / $basis;
	@return if($is-percentage, $relative * 100, $relative);
}
